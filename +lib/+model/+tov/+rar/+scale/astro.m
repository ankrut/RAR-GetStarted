lib.module.constraints
SCALE = lib.require(@lib.model.tov.rar.scale.SI);

% ASTRO SCALE
EXPORT.radius = lib.module.ProfileMapping(...
	@(obj) SCALE.radius.map(obj)/parsec,...
	'\mathrm{pc}' ...
);

EXPORT.velocity = lib.module.ProfileMapping(...
	c/1E3,...
	'\mathrm{km/s}'...
);

EXPORT.mass = lib.module.ProfileMapping(...
	@(obj) SCALE.mass.map(obj)/Msun,...
	'M_\odot'...
);

EXPORT.massDiff = lib.module.ProfileMapping(...
	@(obj) SCALE.mass.map(obj)/Msun/(SCALE.radius.map(obj)/parsec),...
	'M_\odot/\mathrm{pc}'...
);

EXPORT.density = lib.module.ProfileMapping(...
	@(obj) SCALE.density.map(obj)/(Msun/parsec^3),...
	'M_\odot/\mathrm{pc}^3' ...
);

EXPORT.pressure = lib.module.ProfileMapping(...
	@(obj) SCALE.density.map(obj)/(c^2*Msun/parsec^3),...
	'c^2 M_\odot/\mathrm{pc}^3' ...
);

EXPORT.particledensity = lib.module.ProfileMapping(...
	@(obj) SCALE.particledensity.map(obj)/(1/parsec^3),...
	'\mathrm{pc}^{-3}');

EXPORT.restmass = lib.module.ProfileMapping(...
	@(obj) SCALE.density.map(obj)/Msun,...
	'M_\odot'...
);

EXPORT.particle_mass = lib.module.ProfileMapping(...
	@(obj) obj.data.m/eVcc/1E3,...
	'\mathrm{keV}/c^2'...
);

EXPORT.potentialDiff = lib.module.ProfileMapping(...
	@(obj) 1/(SCALE.radius.map(obj)/parsec),...
	'1/\mathrm{pc}'...
);

EXPORT.degeneracyDiff = lib.module.ProfileMapping(...
	@(obj) -1/(SCALE.radius.map(obj)/parsec),...
	'-1/\mathrm{pc}'...
);

EXPORT.temperatureDiff = lib.module.ProfileMapping(...
	@(obj) -obj.data.m*c^2/kB/(SCALE.radius.map(obj)/parsec),...
	'-K/\mathrm{pc}'...
);